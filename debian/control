Source: golang-github-dop251-scsu
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Drew Parsons <dparsons@debian.org>
Section: golang
Testsuite: autopkgtest-pkg-go
Priority: optional
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any
Standards-Version: 4.6.1
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-dop251-scsu
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-dop251-scsu.git
Homepage: https://github.com/dop251/scsu
Rules-Requires-Root: no
XS-Go-Import-Path: github.com/dop251/scsu

Package: golang-github-dop251-scsu-dev
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}
Description: Go Implementation of Standard Compression Scheme for Unicode (library)
 A Standard Compression Scheme for Unicode implementation in Go.
 .
 This in an implementation of SCSU as described in
 (https://www.unicode.org/reports/tr6/tr6-4.html)
 .
 Although UTF-8 is now the most commonly used and recommended encoding, in
 some cases the use of SCSU can be beneficial. For example when storing
 or transmitting short alphabetical texts (Arabic, Hebrew, Russian, etc.)
 where general-purpose compression algorithms are inefficient, but SCSU
 provides nearly 50% compression ratio over UTF-8.
 .
 The code is based on the sample Java implementation found at
 (ftp://ftp.unicode.org/Public/PROGRAMS/SCSU/) however the encoding
 algorithm has been slightly modified as the implementation above
 contains a few bugs.
 .
 The code has been fuzz-tested using go-fuzz to ensure that random
 input neither crashes the Encoder nor the Decoder, and if it happens
 to be a valid UTF-8, an Encode/Decode cycle produces identical
 output.
